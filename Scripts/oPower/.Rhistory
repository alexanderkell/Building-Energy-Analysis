base_data = na.omit(tbl_df(base_data))
base_data$Date.Time = gsub("/",".",gsub(":",".",base_data$Date.Time))
lhs = substr(base_data$Date.Time,2,6)
rhs = gsub('^(.{6}).','.2004 ',base_data$Date.Time)
base_data$Date.Time = paste0(lhs,rhs)
base_data$Date.Time = as.POSIXct(strptime(base_data$Date.Time, "%m.%d.%Y %H.%M.%S"), origin="1900-01-01")
base_data = transform(base_data,hour=hour(Date))
base_data = mutate(base_data, day=weekdays(Date.Time),month=factor(months(Date.Time), levels=months(Date.Time)),
base_data,hour=hour(Date.Time),base_data,timestamp=as.numeric(Date.Time))
View(base_data)
library(tibble)
library("plyr")
library(dplyr)
library("ggplot2")
library("lubridate")
library(pracma)
library("reshape")
library("reshape2")
# Set working directory and gather file names
setwd("~/Documents1/PhD/Opower/Data/RESIDENTIAL_LOAD_DATA_E_PLUS_OUTPUT/HIGH")
filenames = dir()
# Take a sample of csv filenames for decrease in computation time
filenames10 = sample(filenames,20,replace=FALSE)
data1=read.csv(filenames10[1])
data2=read.csv(filenames10[2])
data3=read.csv(filenames10[3])
data4=read.csv(filenames10[4])
data5=read.csv(filenames10[5])
data6=read.csv(filenames10[6])
data7=read.csv(filenames10[7])
# Import files and append name of file
base_data = do.call(rbind,
lapply(filenames10, function(x)
cbind(file=x,read.csv(x)[,c("Date.Time","Electricity.Facility..kW..Hourly.","Gas.Facility..kW..Hourly.")]
)))
base_data = tbl_df(base_data)
# Convert date in dataframe to POSIXct object and add year
base_data$Date.Time = gsub("/",".",gsub(":",".",base_data$Date.Time))
lhs = substr(base_data$Date.Time,2,6)
rhs = gsub('^(.{6}).','.2004 ',base_data$Date.Time)
base_data$Date.Time = paste0(lhs,rhs)
base_data$Date.Time = as.POSIXct(strptime(base_data$Date.Time, "%m.%d.%Y %H.%M.%S"), origin="1900-01-01")
base_data = transform(base_data,hour=hour(Date))
# Add Day, Month, Hour, and Timestamp Data
base_data=transform(base_data,day=weekdays(Date.Time))
base_data=transform(base_data,month=factor(months(Date.Time), levels=months(Date.Time)))
base_data=transform(base_data,hour=hour(Date.Time))
base_data=transform(base_data,timestamp=as.numeric(Date.Time))
base_data=na.omit(base_data)
base_data = ddply(base_data, "file", transform, highest_elec=max(Electricity.Facility..kW..Hourly.)) %>% ddply("file", transform, highest_gas=max(Gas.Facility..kW..Hourly.)) %>%
mutate(rel_elec=Electricity.Facility..kW..Hourly./highest_elec,
rel_gas=Gas.Facility..kW..Hourly./highest_gas) %>%
rowwise() %>% mutate(avg_gas_elec = mean(c(rel_gas,rel_elec)))
feature = ddply(base_data, "file", summarise,
max_elec=max(Electricity.Facility..kW..Hourly.),
max_gas=max(Gas.Facility..kW..Hourly.),
min_elec=min(Electricity.Facility..kW..Hourly.),
min_gas=min(Gas.Facility..kW..Hourly.),
avg_elec_consump=mean(Electricity.Facility..kW..Hourly.),
avg_gas_consump=mean(Gas.Facility..kW..Hourly.),
n_peaks_elec_total=dim(findpeaks(Electricity.Facility..kW..Hourly.))[1]
)
avg_elec_per_hour = ddply(base_data,c("file","hour"),summarise,avg_elec_p_hour = mean(Electricity.Facility..kW..Hourly.)) %>%
dcast(file~hour)
View(avg_elec_per_hour)
colnames(avg_elec_per_hour) = paste(colnames(avg_elec_per_hour),"h elec")
library(tibble)
library("plyr")
library(dplyr)
library("ggplot2")
library("lubridate")
library(pracma)
library("reshape")
library("reshape2")
# Set working directory and gather file names
setwd("~/Documents1/PhD/Opower/Data/RESIDENTIAL_LOAD_DATA_E_PLUS_OUTPUT/HIGH")
filenames = dir()
# Take a sample of csv filenames for decrease in computation time
filenames10 = sample(filenames,20,replace=FALSE)
data1=read.csv(filenames10[1])
data2=read.csv(filenames10[2])
data3=read.csv(filenames10[3])
data4=read.csv(filenames10[4])
data5=read.csv(filenames10[5])
data6=read.csv(filenames10[6])
data7=read.csv(filenames10[7])
# Import files and append name of file
base_data = do.call(rbind,
lapply(filenames10, function(x)
cbind(file=x,read.csv(x)[,c("Date.Time","Electricity.Facility..kW..Hourly.","Gas.Facility..kW..Hourly.")]
)))
base_data = tbl_df(base_data)
# Convert date in dataframe to POSIXct object and add year
base_data$Date.Time = gsub("/",".",gsub(":",".",base_data$Date.Time))
lhs = substr(base_data$Date.Time,2,6)
rhs = gsub('^(.{6}).','.2004 ',base_data$Date.Time)
base_data$Date.Time = paste0(lhs,rhs)
base_data$Date.Time = as.POSIXct(strptime(base_data$Date.Time, "%m.%d.%Y %H.%M.%S"), origin="1900-01-01")
base_data = transform(base_data,hour=hour(Date))
# Add Day, Month, Hour, and Timestamp Data
base_data=transform(base_data,day=weekdays(Date.Time))
base_data=transform(base_data,month=factor(months(Date.Time), levels=months(Date.Time)))
base_data=transform(base_data,hour=hour(Date.Time))
base_data=transform(base_data,timestamp=as.numeric(Date.Time))
base_data=na.omit(base_data)
# Calculate relative electricity consumption
base_data = ddply(base_data, "file", transform, highest_elec=max(Electricity.Facility..kW..Hourly.)) %>% ddply("file", transform, highest_gas=max(Gas.Facility..kW..Hourly.)) %>%
mutate(rel_elec=Electricity.Facility..kW..Hourly./highest_elec,
rel_gas=Gas.Facility..kW..Hourly./highest_gas) %>%
rowwise() %>% mutate(avg_gas_elec = mean(c(rel_gas,rel_elec)))
# Calculate relative electricty + gas consumption
# base_data = ddply(base_data, "file", transform, highest gas=max('Gas.Facility..kW..Hourly.'))
# Electricity Plot
ggplot(data=filter(base_data,file=='USA_IA_Boone.Muni.AP.725486_TMY3_HIGH.csv'), aes(factor(hour),Electricity.Facility..kW..Hourly.)) + geom_boxplot() + facet_wrap(~month)
# Gas Plot
ggplot(data=filter(base_data,file=='USA_IA_Boone.Muni.AP.725486_TMY3_HIGH.csv'), aes(factor(hour),Gas.Facility..kW..Hourly.)) + geom_boxplot() + facet_wrap(~month)
# Electricity and Gas Plot Overlay
ggplot(data=subset(base_data,!is.na(month)&file=='USA_WA_Whidbey.Island.NAS.690230_TMY3_HIGH.csv')) +
geom_boxplot(aes(factor(hour),Electricity.Facility..kW..Hourly.)) +
geom_boxplot(aes(factor(hour),Gas.Facility..kW..Hourly.), color='red') +
facet_wrap(~month)
# Features
feature = ddply(base_data, "file", summarise,
max_elec=max(Electricity.Facility..kW..Hourly.),
max_gas=max(Gas.Facility..kW..Hourly.),
min_elec=min(Electricity.Facility..kW..Hourly.),
min_gas=min(Gas.Facility..kW..Hourly.),
avg_elec_consump=mean(Electricity.Facility..kW..Hourly.),
avg_gas_consump=mean(Gas.Facility..kW..Hourly.),
n_peaks_elec_total=dim(findpeaks(Electricity.Facility..kW..Hourly.))[1]
)
avg_elec_per_hour = ddply(base_data,c("file","hour"),summarise,avg_elec_p_hour = mean(Electricity.Facility..kW..Hourly.)) %>%
dcast(file~hour)
colnames(avg_elec_per_hour[-1]) = paste(colnames(avg_elec_per_hour),"h elec")
colnames(avg_gas_per_hour) = paste(colnames(avg_gas_per_hour[-1]),"h gas")
colnames(avg_elec_per_hour[-1]) = paste(colnames(avg_elec_per_hour[-1]),"h elec")
View(avg_elec_per_hour)
colnames(avg_elec_per_hour) = paste(colnames(avg_elec_per_hour),"h elec")
avg_gas_per_hour_long = ddply(base_data,c("file","hour"),summarise,avg_gas_p_hour=mean(Gas.Facility..kW..Hourly.))
avg_gas_per_hour = dcast(avg_gas_per_hour_long, file~hour)
View(avg_gas_per_hour_long)
View(avg_gas_per_hour)
colnames(avg_gas_per_hour) = paste(colnames(avg_gas_per_hour),"h gas")
avg_energy_per_hour = cbind(avg_gas_per_hour,avg_elec_per_hour)
View(avg_energy_per_hour)
peak_dat = ddply(avg_energy_per_hour,c("file"),summarise,
n_peaks_elec=dim(findpeaks(avg_elec_p_hour))[1],
highest_pk_time_elec = findpeaks(avg_elec_p_hour)[which.max(findpeaks(avg_elec_p_hour)[,1]),2]-1,
n_peaks_gas=ifelse(is.null(dim(findpeaks(avg_gas_p_hour))[1]),0,dim(findpeaks(avg_gas_p_hour))[1]),
highest_pk_time_gas = ifelse(
is.null(findpeaks(avg_gas_p_hour)[which.max(findpeaks(avg_gas_p_hour)[,1]),2]),
0,findpeaks(avg_gas_p_hour)[which.max(findpeaks(avg_gas_p_hour)[,1]),2]-1)
)
peak_dat = ddply(avg_energy_per_hour,c("file"),summarise,
n_peaks_elec=dim(findpeaks(avg_elec_p_hour))[1],
highest_pk_time_elec = findpeaks(avg_elec_p_hour)[which.max(findpeaks(avg_elec_p_hour)[,1]),2]-1,
n_peaks_gas=ifelse(is.null(dim(findpeaks(avg_gas_p_hour))[1]),0,dim(findpeaks(avg_gas_p_hour))[1]),
highest_pk_time_gas = ifelse(
is.null(findpeaks(avg_gas_p_hour)[which.max(findpeaks(avg_gas_p_hour)[,1]),2]),
0,findpeaks(avg_gas_p_hour)[which.max(findpeaks(avg_gas_p_hour)[,1]),2]-1)
)
avg_energy_per_hour = cbind(avg_gas_per_hour_long,avg_elec_per_hour_long)
avg_elec_per_hour_long = ddply(base_data,c("file","hour"),summarise,avg_elec_p_hour = mean(Electricity.Facility..kW..Hourly.)) %>%
avg_elec_per_hour = dcast(avg_elec_per_hour_long,file~hour)
avg_elec_per_hour_long = ddply(base_data,c("file","hour"),summarise,avg_elec_p_hour = mean(Electricity.Facility..kW..Hourly.)) %>%
avg_elec_per_hour = dcast(avg_elec_per_hour_long,file~hour)
avg_elec_per_hour_long = ddply(base_data,c("file","hour"),summarise,avg_elec_p_hour = mean(Electricity.Facility..kW..Hourly.))
View(avg_elec_per_hour_long)
library(tibble)
library("plyr")
library(dplyr)
library("ggplot2")
library("lubridate")
library(pracma)
library("reshape")
library("reshape2")
# Set working directory and gather file names
setwd("~/Documents1/PhD/Opower/Data/RESIDENTIAL_LOAD_DATA_E_PLUS_OUTPUT/HIGH")
filenames = dir()
# Take a sample of csv filenames for decrease in computation time
filenames10 = sample(filenames,20,replace=FALSE)
data1=read.csv(filenames10[1])
data2=read.csv(filenames10[2])
data3=read.csv(filenames10[3])
data4=read.csv(filenames10[4])
data5=read.csv(filenames10[5])
data6=read.csv(filenames10[6])
data7=read.csv(filenames10[7])
# Import files and append name of file
base_data = do.call(rbind,
lapply(filenames10, function(x)
cbind(file=x,read.csv(x)[,c("Date.Time","Electricity.Facility..kW..Hourly.","Gas.Facility..kW..Hourly.")]
)))
base_data = tbl_df(base_data)
# Convert date in dataframe to POSIXct object and add year
base_data$Date.Time = gsub("/",".",gsub(":",".",base_data$Date.Time))
lhs = substr(base_data$Date.Time,2,6)
rhs = gsub('^(.{6}).','.2004 ',base_data$Date.Time)
base_data$Date.Time = paste0(lhs,rhs)
base_data$Date.Time = as.POSIXct(strptime(base_data$Date.Time, "%m.%d.%Y %H.%M.%S"), origin="1900-01-01")
base_data = transform(base_data,hour=hour(Date))
# Add Day, Month, Hour, and Timestamp Data
base_data=transform(base_data,day=weekdays(Date.Time))
base_data=transform(base_data,month=factor(months(Date.Time), levels=months(Date.Time)))
base_data=transform(base_data,hour=hour(Date.Time))
base_data=transform(base_data,timestamp=as.numeric(Date.Time))
base_data=na.omit(base_data)
# Calculate relative electricity consumption
base_data = ddply(base_data, "file", transform, highest_elec=max(Electricity.Facility..kW..Hourly.)) %>% ddply("file", transform, highest_gas=max(Gas.Facility..kW..Hourly.)) %>%
mutate(rel_elec=Electricity.Facility..kW..Hourly./highest_elec,
rel_gas=Gas.Facility..kW..Hourly./highest_gas) %>%
rowwise() %>% mutate(avg_gas_elec = mean(c(rel_gas,rel_elec)))
# Calculate relative electricty + gas consumption
# base_data = ddply(base_data, "file", transform, highest gas=max('Gas.Facility..kW..Hourly.'))
# Electricity Plot
ggplot(data=filter(base_data,file=='USA_IA_Boone.Muni.AP.725486_TMY3_HIGH.csv'), aes(factor(hour),Electricity.Facility..kW..Hourly.)) + geom_boxplot() + facet_wrap(~month)
# Gas Plot
ggplot(data=filter(base_data,file=='USA_IA_Boone.Muni.AP.725486_TMY3_HIGH.csv'), aes(factor(hour),Gas.Facility..kW..Hourly.)) + geom_boxplot() + facet_wrap(~month)
# Electricity and Gas Plot Overlay
ggplot(data=subset(base_data,!is.na(month)&file=='USA_WA_Whidbey.Island.NAS.690230_TMY3_HIGH.csv')) +
geom_boxplot(aes(factor(hour),Electricity.Facility..kW..Hourly.)) +
geom_boxplot(aes(factor(hour),Gas.Facility..kW..Hourly.), color='red') +
facet_wrap(~month)
# Features
feature = ddply(base_data, "file", summarise,
max_elec=max(Electricity.Facility..kW..Hourly.),
max_gas=max(Gas.Facility..kW..Hourly.),
min_elec=min(Electricity.Facility..kW..Hourly.),
min_gas=min(Gas.Facility..kW..Hourly.),
avg_elec_consump=mean(Electricity.Facility..kW..Hourly.),
avg_gas_consump=mean(Gas.Facility..kW..Hourly.),
n_peaks_elec_total=dim(findpeaks(Electricity.Facility..kW..Hourly.))[1]
)
avg_elec_per_hour_long = ddply(base_data,c("file","hour"),summarise,avg_elec_p_hour = mean(Electricity.Facility..kW..Hourly.))
avg_elec_per_hour = dcast(avg_elec_per_hour_long,file~hour)
colnames(avg_elec_per_hour) = paste(colnames(avg_elec_per_hour),"h elec")
avg_gas_per_hour_long = ddply(base_data,c("file","hour"),summarise,avg_gas_p_hour=mean(Gas.Facility..kW..Hourly.))
avg_gas_per_hour = dcast(avg_gas_per_hour_long, file~hour)
colnames(avg_gas_per_hour) = paste(colnames(avg_gas_per_hour),"h gas")
avg_energy_per_hour = cbind(avg_gas_per_hour_long,avg_elec_per_hour_long[-1])
avg_energy_per_hour = cbind(avg_gas_per_hour_long,avg_elec_per_hour_long[-c(1,2)])
peak_dat1 = ddply(avg_energy_per_hour,"file",summarise,
n_peaks_elec=dim(findpeaks(avg_elec_p_hour))[1],
highest_pk_time_elec=findpeaks(avg_elec_p_hour)
)
peak_dat1 = ddply(avg_energy_per_hour,"file",summarise,
n_peaks_elec=dim(findpeaks(avg_elec_p_hour))[1],
highest_pk_time_elec=findpeaks(avg_elec_p_hour)[which.max(findpeaks(avg_elec_p_hour)[,1]),2]-1
)
View(peak_dat1)
peak_dat1 = ddply(avg_energy_per_hour,"file",summarise,
n_peaks_elec=dim(findpeaks(avg_elec_p_hour))[1],
highest_pk_time_elec=findpeaks(avg_elec_p_hour)[which.max(findpeaks(avg_elec_p_hour)[,1]),2]-1,
n_peaks_gas=dim(findpeaks(avg_gas_per_hour))[1],
highest_pk_time_gas=findpeaks(avg_gas_p_hour)[which.max(findpeaks(avg_gas_p_hour)[,1]),2]-1
)
peak_dat1 = ddply(avg_energy_per_hour,"file",summarise,
n_peaks_elec=dim(findpeaks(avg_elec_p_hour))[1],
highest_pk_time_elec=findpeaks(avg_elec_p_hour)[which.max(findpeaks(avg_elec_p_hour)[,1]),2]-1,
n_peaks_gas=ifelse(is.null(dim(findpeaks(avg_gas_per_hour)))[1],0,dim(findpeaks(avg_gas_per_hour))
# highest_pk_time_gas=findpeaks(avg_gas_p_hour)[which.max(findpeaks(avg_gas_p_hour)[,1]),2]-1
)
# peak_dat = ddply(avg_energy_per_hour,c("file"),summarise,
#                           n_peaks_elec=dim(findpeaks(avg_elec_p_hour))[1],
#                           highest_pk_time_elec = findpeaks(avg_elec_p_hour)[which.max(findpeaks(avg_elec_p_hour)[,1]),2]-1,
#                           n_peaks_gas=ifelse(is.null(dim(findpeaks(avg_gas_p_hour))[1]),0,dim(findpeaks(avg_gas_p_hour))[1]),
#                           highest_pk_time_gas = ifelse(
#                                                   is.null(findpeaks(avg_gas_p_hour)[which.max(findpeaks(avg_gas_p_hour)[,1]),2]),
#                                                     0,findpeaks(avg_gas_p_hour)[which.max(findpeaks(avg_gas_p_hour)[,1]),2]-1)
#                  )
ggplot(data=filter(avg_energy_per_hour_long,file=='USA_MN_Fosston.AWOS.727505_TMY3_HIGH.csv')) + geom_line(aes(hour,avg_elec_p_hour))
ggplot(data=filter(avg_gas_per_hour_long,`file`=='USA_OH_Cleveland-Hopkins.Intl.AP.725240_TMY3_HIGH.csv')) + geom_line(aes(hour,avg_gas_p_hour))
features_total = cbind(feature,n_peaks_elec = peak_dat$n_peaks_elec,highest_pk_time_elec = peak_dat$highest_pk_time_elec, n_peaks_gas = peak_dat$n_peaks_gas, highest_pk_time_gas = peak_dat$highest_pk_time_gas, avg_gas_per_hour[-1], avg_elec_per_hour[-1])
# Peaks
y = c(10,9,2,4,2,8,7.999999,2)
plot(y, type="l")
findpeaks(y)[which.max(findpeaks(y)[,1]),2]
peak_dat1 = ddply(avg_energy_per_hour,"file",summarise,
n_peaks_elec=dim(findpeaks(avg_elec_p_hour))[1],
highest_pk_time_elec=findpeaks(avg_elec_p_hour)[which.max(findpeaks(avg_elec_p_hour)[,1]),2]-1,
n_peaks_gas=ifelse(is.null(dim(findpeaks(avg_gas_per_hour)))[1],0,dim(findpeaks(avg_gas_per_hour)))
# highest_pk_time_gas=findpeaks(avg_gas_p_hour)[which.max(findpeaks(avg_gas_p_hour)[,1]),2]-1
)
peak_dat1 = ddply(avg_energy_per_hour,"file",summarise,
n_peaks_elec=dim(findpeaks(avg_elec_p_hour))[1],
highest_pk_time_elec=findpeaks(avg_elec_p_hour)[which.max(findpeaks(avg_elec_p_hour)[,1]),2]-1,
n_peaks_gas=ifelse(is.null(dim(findpeaks(avg_gas_p_hour)))[1],0,dim(findpeaks(avg_gas_p_hour)))
)
ggplot(data=filter(avg_gas_per_hour_long,`file`=='USA_TX_Nacogdoches.AWOS.722499_TMY3_HIGH.csv')) + geom_line(aes(hour,avg_gas_p_hour))
ggplot(data=filter(avg_gas_per_hour_long,`file`=='USA_TX_Dallas-Love.Field.722583_TMY3_HIGH.csv')) + geom_line(aes(hour,avg_gas_p_hour))
ggplot(data=filter(avg_gas_per_hour_long,`file`=='USA_NJ_McGuire.AFB.724096_TMY3_HIGH.csv')) + geom_line(aes(hour,avg_gas_p_hour))
peak_dat1 = ddply(avg_energy_per_hour,"file",summarise,
n_peaks_elec=dim(findpeaks(avg_elec_p_hour))[1],
highest_pk_time_elec=findpeaks(avg_elec_p_hour)[which.max(findpeaks(avg_elec_p_hour)[,1]),2]-1,
n_peaks_gas=ifelse(is.null(dim(findpeaks(avg_gas_p_hour)))[1],0,dim(findpeaks(avg_gas_p_hour))),
highest_pk_time_gas= ifelse(is.null(findpeaks(avg_gas_p_hour)[which.max(findpeaks(avg_gas_p_hour)[,1]),2]),
0,
findpeaks(avg_gas_p_hour)[which.max(findpeaks(avg_gas_p_hour)[,1]),2])
)
ggplot(data=filter(avg_gas_per_hour_long,`file`=='USA_CA_San.Luis.Obispo.AP.722897_TMY3_HIGH.csv')) + geom_line(aes(hour,avg_gas_p_hour))
peak_dat = ddply(avg_energy_per_hour,"file",summarise,
n_peaks_elec=dim(findpeaks(avg_elec_p_hour))[1],
highest_pk_time_elec=findpeaks(avg_elec_p_hour)[which.max(findpeaks(avg_elec_p_hour)[,1]),2]-1,
n_peaks_gas=ifelse(is.null(dim(findpeaks(avg_gas_p_hour)))[1],0,dim(findpeaks(avg_gas_p_hour))),
highest_pk_time_gas= ifelse(is.null(findpeaks(avg_gas_p_hour)[which.max(findpeaks(avg_gas_p_hour)[,1]),2]),
0,
findpeaks(avg_gas_p_hour)[which.max(findpeaks(avg_gas_p_hour)[,1]),2])
)
features_total = cbind(feature,avg_elec_per_hour[-1],n_peaks_elec = peak_dat$n_peaks_elec,highest_pk_time_elec = peak_dat$highest_pk_time_elec, avg_gas_per_hour[-1],n_peaks_gas = peak_dat$n_peaks_gas, highest_pk_time_gas = peak_dat$highest_pk_time_gas)
View(features_total)
features_total = cbind(feature,n_peaks_elec = peak_dat$n_peaks_elec,highest_pk_time_elec = peak_dat$highest_pk_time_elec, avg_elec_per_hour[-1],n_peaks_gas = peak_dat$n_peaks_gas, highest_pk_time_gas = peak_dat$highest_pk_time_gas,avg_gas_per_hour[-1])
peak_dat = ddply(avg_energy_per_hour,"file",summarise,
n_peaks_elec=dim(findpeaks(avg_elec_p_hour))[1],
highest_pk_time_elec=findpeaks(avg_elec_p_hour)[which.max(findpeaks(avg_elec_p_hour)[,1]),2]-1,
n_peaks_gas=ifelse(is.null(dim(findpeaks(avg_gas_p_hour)))[1],0,dim(findpeaks(avg_gas_p_hour))),
highest_pk_time_gas= ifelse(is.null(findpeaks(avg_gas_p_hour)[which.max(findpeaks(avg_gas_p_hour)[,1]),2]),
0,
findpeaks(avg_gas_p_hour)[which.max(findpeaks(avg_gas_p_hour)[,1]),2]-1)
)
features_total = cbind(feature,n_peaks_elec = peak_dat$n_peaks_elec,highest_pk_time_elec = peak_dat$highest_pk_time_elec, avg_elec_per_hour[-1],n_peaks_gas = peak_dat$n_peaks_gas, highest_pk_time_gas = peak_dat$highest_pk_time_gas,avg_gas_per_hour[-1])
filenames10
ggplot(data=filter(avg_energy_per_hour_long,file=='USA_PA_State.College-Penn.State.University.725128_TMY3_HIGH.csv')) + geom_line(aes(hour,avg_elec_p_hour))
ggplot(data=filter(avg_gas_per_hour_long,`file`=='USA_PA_State.College-Penn.State.University.725128_TMY3_HIGH.csv')) + geom_line(aes(hour,avg_gas_p_hour))
ggplot(data=filter(avg_elec_per_hour_long,file=='USA_PA_State.College-Penn.State.University.725128_TMY3_HIGH.csv')) + geom_line(aes(hour,avg_elec_p_hour))
ggplot(data=filter(avg_gas_per_hour_long,`file`=='USA_PA_State.College-Penn.State.University.725128_TMY3_HIGH.csv')) + geom_line(aes(hour,avg_gas_p_hour))
ggplot(data=filter(base_data,file=='USA_PA_State.College-Penn.State.University.725128_TMY3_HIGH.csv'), aes(factor(hour),Gas.Facility..kW..Hourly.)) + geom_boxplot() + facet_wrap(~month)
filenames10
library(tibble)
library("plyr")
library(dplyr)
library("ggplot2")
library("lubridate")
library(pracma)
library("reshape")
library("reshape2")
# Set working directory and gather file names
setwd("~/Documents1/PhD/Opower/Data/RESIDENTIAL_LOAD_DATA_E_PLUS_OUTPUT/HIGH")
filenames = dir()
# Take a sample of csv filenames for decrease in computation time
filenames10 = sample(filenames,20,replace=FALSE)
data1=read.csv(filenames10[1])
data2=read.csv(filenames10[2])
data3=read.csv(filenames10[3])
data4=read.csv(filenames10[4])
data5=read.csv(filenames10[5])
data6=read.csv(filenames10[6])
data7=read.csv(filenames10[7])
# Import files and append name of file
base_data = do.call(rbind,
lapply(filenames10, function(x)
cbind(file=x,read.csv(x)[,c("Date.Time","Electricity.Facility..kW..Hourly.","Gas.Facility..kW..Hourly.")]
)))
base_data = tbl_df(base_data)
# Convert date in dataframe to POSIXct object and add year
base_data$Date.Time = gsub("/",".",gsub(":",".",base_data$Date.Time))
lhs = substr(base_data$Date.Time,2,6)
rhs = gsub('^(.{6}).','.2004 ',base_data$Date.Time)
base_data$Date.Time = paste0(lhs,rhs)
base_data$Date.Time = as.POSIXct(strptime(base_data$Date.Time, "%m.%d.%Y %H.%M.%S"), origin="1900-01-01")
base_data = transform(base_data,hour=hour(Date))
# Add Day, Month, Hour, and Timestamp Data
base_data=transform(base_data,day=weekdays(Date.Time))
base_data=transform(base_data,month=factor(months(Date.Time), levels=months(Date.Time)))
base_data=transform(base_data,hour=hour(Date.Time))
base_data=transform(base_data,timestamp=as.numeric(Date.Time))
base_data=na.omit(base_data)
# Calculate relative electricity consumption
base_data = ddply(base_data, "file", transform, highest_elec=max(Electricity.Facility..kW..Hourly.)) %>% ddply("file", transform, highest_gas=max(Gas.Facility..kW..Hourly.)) %>%
mutate(rel_elec=Electricity.Facility..kW..Hourly./highest_elec,
rel_gas=Gas.Facility..kW..Hourly./highest_gas) %>%
rowwise() %>% mutate(avg_gas_elec = mean(c(rel_gas,rel_elec)))
# Calculate relative electricty + gas consumption
# base_data = ddply(base_data, "file", transform, highest gas=max('Gas.Facility..kW..Hourly.'))
# Electricity Plot
ggplot(data=filter(base_data,file=='USA_IA_Boone.Muni.AP.725486_TMY3_HIGH.csv'), aes(factor(hour),Electricity.Facility..kW..Hourly.)) + geom_boxplot() + facet_wrap(~month)
# Gas Plot
ggplot(data=filter(base_data,file=='USA_PA_State.College-Penn.State.University.725128_TMY3_HIGH.csv'), aes(factor(hour),Gas.Facility..kW..Hourly.)) + geom_boxplot() + facet_wrap(~month)
# Electricity and Gas Plot Overlay
ggplot(data=subset(base_data,!is.na(month)&file=='USA_WA_Whidbey.Island.NAS.690230_TMY3_HIGH.csv')) +
geom_boxplot(aes(factor(hour),Electricity.Facility..kW..Hourly.)) +
geom_boxplot(aes(factor(hour),Gas.Facility..kW..Hourly.), color='red') +
facet_wrap(~month)
# Features
feature = ddply(base_data, "file", summarise,
max_elec=max(Electricity.Facility..kW..Hourly.),
max_gas=max(Gas.Facility..kW..Hourly.),
min_elec=min(Electricity.Facility..kW..Hourly.),
min_gas=min(Gas.Facility..kW..Hourly.),
avg_elec_consump=mean(Electricity.Facility..kW..Hourly.),
avg_gas_consump=mean(Gas.Facility..kW..Hourly.),
n_peaks_elec_total=dim(findpeaks(Electricity.Facility..kW..Hourly.))[1]
)
avg_elec_per_hour_long = ddply(base_data,c("file","hour"),summarise,avg_elec_p_hour = mean(Electricity.Facility..kW..Hourly.))
avg_elec_per_hour = dcast(avg_elec_per_hour_long,file~hour)
colnames(avg_elec_per_hour) = paste(colnames(avg_elec_per_hour),"h elec")
avg_gas_per_hour_long = ddply(base_data,c("file","hour"),summarise,avg_gas_p_hour=mean(Gas.Facility..kW..Hourly.))
avg_gas_per_hour = dcast(avg_gas_per_hour_long, file~hour)
colnames(avg_gas_per_hour) = paste(colnames(avg_gas_per_hour),"h gas")
avg_energy_per_hour = cbind(avg_gas_per_hour_long,avg_elec_per_hour_long[-c(1,2)])
peak_dat = ddply(avg_energy_per_hour,"file",summarise,
n_peaks_elec=dim(findpeaks(avg_elec_p_hour))[1],
highest_pk_time_elec=findpeaks(avg_elec_p_hour)[which.max(findpeaks(avg_elec_p_hour)[,1]),2]-1,
n_peaks_gas=ifelse(is.null(dim(findpeaks(avg_gas_p_hour)))[1],0,dim(findpeaks(avg_gas_p_hour))),
highest_pk_time_gas= ifelse(is.null(findpeaks(avg_gas_p_hour)[which.max(findpeaks(avg_gas_p_hour)[,1]),2]),
0,
findpeaks(avg_gas_p_hour)[which.max(findpeaks(avg_gas_p_hour)[,1]),2]-1)
)
ggplot(data=filter(avg_elec_per_hour_long,file=='USA_PA_State.College-Penn.State.University.725128_TMY3_HIGH.csv')) + geom_line(aes(hour,avg_elec_p_hour))
ggplot(data=filter(avg_gas_per_hour_long,`file`=='USA_PA_State.College-Penn.State.University.725128_TMY3_HIGH.csv')) + geom_line(aes(hour,avg_gas_p_hour))
features_total = cbind(feature,n_peaks_elec = peak_dat$n_peaks_elec,highest_pk_time_elec = peak_dat$highest_pk_time_elec, avg_elec_per_hour[-1],n_peaks_gas = peak_dat$n_peaks_gas, highest_pk_time_gas = peak_dat$highest_pk_time_gas,avg_gas_per_hour[-1])
# K Means Clustering of Feature Data
# kMeans = kmeans(base_data[c('timestamp','Gas.Facility..kW..Hourly.','Electricity.Facility..kW..Hourly.')], 6, nstart=20)
# base_data$cluster = kMeans$cluster
# Group each property by maximum count of each cluster number
# cluster_max_count = ddply(base_data,c('file','cluster'),count,'cluster')
features_total = cbind(feature,n_peaks_elec = peak_dat$n_peaks_elec,highest_pk_time_elec = peak_dat$highest_pk_time_elec,n_peaks_gas = peak_dat$n_peaks_gas, highest_pk_time_gas = peak_dat$highest_pk_time_gas,avg_elec_per_hour[-1],avg_gas_per_hour[-1])
View(avg_gas_per_hour_long)
?facet_rw
?facet_wrap
ggplot(data=avg_gas_per_hour_long)+geom_line(aes(hour,avg_gas_p_hour))+facet_wrap(~file)
ggplot(data=avg_elec_per_hour_long)+geom_line(aes(hour,avg_elec_p_hour))+facet_wrap(~file)
library(tibble)
library("plyr")
library(dplyr)
library("ggplot2")
library("lubridate")
library(pracma)
library("reshape")
library("reshape2")
# Set working directory and gather file names
setwd("~/Documents1/PhD/Opower/Data/RESIDENTIAL_LOAD_DATA_E_PLUS_OUTPUT/HIGH")
filenames = dir()
# Take a sample of csv filenames for decrease in computation time
filenames10 = sample(filenames,50,replace=FALSE)
data1=read.csv(filenames10[1])
data2=read.csv(filenames10[2])
data3=read.csv(filenames10[3])
data4=read.csv(filenames10[4])
data5=read.csv(filenames10[5])
data6=read.csv(filenames10[6])
data7=read.csv(filenames10[7])
# Import files and append name of file
base_data = do.call(rbind,
lapply(filenames10, function(x)
cbind(file=x,read.csv(x)[,c("Date.Time","Electricity.Facility..kW..Hourly.","Gas.Facility..kW..Hourly.")]
)))
base_data = tbl_df(base_data)
# Convert date in dataframe to POSIXct object and add year
base_data$Date.Time = gsub("/",".",gsub(":",".",base_data$Date.Time))
lhs = substr(base_data$Date.Time,2,6)
rhs = gsub('^(.{6}).','.2004 ',base_data$Date.Time)
base_data$Date.Time = paste0(lhs,rhs)
base_data$Date.Time = as.POSIXct(strptime(base_data$Date.Time, "%m.%d.%Y %H.%M.%S"), origin="1900-01-01")
base_data = transform(base_data,hour=hour(Date))
# Add Day, Month, Hour, and Timestamp Data
base_data=transform(base_data,day=weekdays(Date.Time))
base_data=transform(base_data,month=factor(months(Date.Time), levels=months(Date.Time)))
base_data=transform(base_data,hour=hour(Date.Time))
base_data=transform(base_data,timestamp=as.numeric(Date.Time))
base_data=na.omit(base_data)
# Calculate relative electricity consumption
base_data = ddply(base_data, "file", transform, highest_elec=max(Electricity.Facility..kW..Hourly.)) %>% ddply("file", transform, highest_gas=max(Gas.Facility..kW..Hourly.)) %>%
mutate(rel_elec=Electricity.Facility..kW..Hourly./highest_elec,
rel_gas=Gas.Facility..kW..Hourly./highest_gas) %>%
rowwise() %>% mutate(avg_gas_elec = mean(c(rel_gas,rel_elec)))
# Calculate relative electricty + gas consumption
# base_data = ddply(base_data, "file", transform, highest gas=max('Gas.Facility..kW..Hourly.'))
# Electricity Plot
ggplot(data=filter(base_data,file=='USA_IA_Boone.Muni.AP.725486_TMY3_HIGH.csv'), aes(factor(hour),Electricity.Facility..kW..Hourly.)) + geom_boxplot() + facet_wrap(~month)
# Gas Plot
ggplot(data=filter(base_data,file=='USA_PA_State.College-Penn.State.University.725128_TMY3_HIGH.csv'), aes(factor(hour),Gas.Facility..kW..Hourly.)) + geom_boxplot() + facet_wrap(~month)
# Electricity and Gas Plot Overlay
ggplot(data=subset(base_data,!is.na(month)&file=='USA_WA_Whidbey.Island.NAS.690230_TMY3_HIGH.csv')) +
geom_boxplot(aes(factor(hour),Electricity.Facility..kW..Hourly.)) +
geom_boxplot(aes(factor(hour),Gas.Facility..kW..Hourly.), color='red') +
facet_wrap(~month)
# Features
feature = ddply(base_data, "file", summarise,
max_elec=max(Electricity.Facility..kW..Hourly.),
max_gas=max(Gas.Facility..kW..Hourly.),
min_elec=min(Electricity.Facility..kW..Hourly.),
min_gas=min(Gas.Facility..kW..Hourly.),
avg_elec_consump=mean(Electricity.Facility..kW..Hourly.),
avg_gas_consump=mean(Gas.Facility..kW..Hourly.),
n_peaks_elec_total=dim(findpeaks(Electricity.Facility..kW..Hourly.))[1]
)
avg_elec_per_hour_long = ddply(base_data,c("file","hour"),summarise,avg_elec_p_hour = mean(Electricity.Facility..kW..Hourly.))
avg_elec_per_hour = dcast(avg_elec_per_hour_long,file~hour)
colnames(avg_elec_per_hour) = paste(colnames(avg_elec_per_hour),"h elec")
avg_gas_per_hour_long = ddply(base_data,c("file","hour"),summarise,avg_gas_p_hour=mean(Gas.Facility..kW..Hourly.))
avg_gas_per_hour = dcast(avg_gas_per_hour_long, file~hour)
colnames(avg_gas_per_hour) = paste(colnames(avg_gas_per_hour),"h gas")
avg_energy_per_hour = cbind(avg_gas_per_hour_long,avg_elec_per_hour_long[-c(1,2)])
peak_dat = ddply(avg_energy_per_hour,"file",summarise,
n_peaks_elec=dim(findpeaks(avg_elec_p_hour))[1],
highest_pk_time_elec=findpeaks(avg_elec_p_hour)[which.max(findpeaks(avg_elec_p_hour)[,1]),2]-1,
n_peaks_gas=ifelse(is.null(dim(findpeaks(avg_gas_p_hour)))[1],0,dim(findpeaks(avg_gas_p_hour))),
highest_pk_time_gas= ifelse(is.null(findpeaks(avg_gas_p_hour)[which.max(findpeaks(avg_gas_p_hour)[,1]),2]),
0,
findpeaks(avg_gas_p_hour)[which.max(findpeaks(avg_gas_p_hour)[,1]),2]-1)
)
ggplot(data=filter(avg_elec_per_hour_long,file=='USA_PA_State.College-Penn.State.University.725128_TMY3_HIGH.csv')) + geom_line(aes(hour,avg_elec_p_hour))
ggplot(data=filter(avg_gas_per_hour_long,`file`=='USA_PA_State.College-Penn.State.University.725128_TMY3_HIGH.csv')) + geom_line(aes(hour,avg_gas_p_hour))
ggplot(data=avg_gas_per_hour_long)+geom_line(aes(hour,avg_gas_p_hour))+facet_wrap(~file)
ggplot(data=avg_elec_per_hour_long)+geom_line(aes(hour,avg_elec_p_hour))+facet_wrap(~file)
features_total = cbind(feature,n_peaks_elec = peak_dat$n_peaks_elec,highest_pk_time_elec = peak_dat$highest_pk_time_elec,n_peaks_gas = peak_dat$n_peaks_gas, highest_pk_time_gas = peak_dat$highest_pk_time_gas,avg_elec_per_hour[-1],avg_gas_per_hour[-1])
# K Means Clustering of Feature Data
# kMeans = kmeans(base_data[c('timestamp','Gas.Facility..kW..Hourly.','Electricity.Facility..kW..Hourly.')], 6, nstart=20)
# base_data$cluster = kMeans$cluster
# Group each property by maximum count of each cluster number
# cluster_max_count = ddply(base_data,c('file','cluster'),count,'cluster')
ggplot(data=avg_elec_per_hour_long)+geom_line(aes(hour,avg_elec_p_hour))+facet_wrap(~file)
