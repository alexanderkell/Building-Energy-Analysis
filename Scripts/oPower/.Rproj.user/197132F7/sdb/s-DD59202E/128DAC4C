{
    "collab_server" : "",
    "contents" : "library(tibble)\nlibrary(\"plyr\")\nlibrary(dplyr)\nlibrary(\"ggplot2\")\nlibrary(\"lubridate\")\nlibrary(pracma)\nlibrary(\"reshape\")\nlibrary(\"reshape2\")\n\n# Set working directory and gather file names\n# setwd(\"~/Documents1/PhD/Opower/Data/RESIDENTIAL_LOAD_DATA_E_PLUS_OUTPUT/HIGH\")\nsetwd(\"~/Documents1/PhD/Opower/Data/COMMERCIAL_LOAD_DATA_E_PLUS_OUTPUT.part1/USA_AK_Anchorage.Intl.AP.702730_TMY3\")\nfilenames = dir()\n\n# Take a sample of csv filenames for decrease in computation time\nfilenames10 = sample(filenames,12,replace=FALSE)\n\ndata1=read.csv(filenames10[1])\ndata2=read.csv(filenames10[2])\ndata3=read.csv(filenames10[3])\ndata4=read.csv(filenames10[4])\ndata5=read.csv(filenames10[5])\ndata6=read.csv(filenames10[6])\ndata7=read.csv(filenames10[7])\n\n# Import files and append name of file\nbase_data = do.call(rbind, \n                    lapply(filenames10, function(x)\n                      cbind(file=x,read.csv(x)[,c(\"Date.Time\",\"Electricity.Facility..kW..Hourly.\",\"Gas.Facility..kW..Hourly.\")]\n                      )))\nbase_data = tbl_df(base_data)\n\n# Convert date in dataframe to POSIXct object and add year\nbase_data$Date.Time = gsub(\"/\",\".\",gsub(\":\",\".\",base_data$Date.Time))\nlhs = substr(base_data$Date.Time,2,6)\nrhs = gsub('^(.{6}).','.2004 ',base_data$Date.Time)\nbase_data$Date.Time = paste0(lhs,rhs)\n\nbase_data$Date.Time = as.POSIXct(strptime(base_data$Date.Time, \"%m.%d.%Y %H.%M.%S\"), origin=\"1900-01-01\")\n\n# Add Day, Month, Hour, and Timestamp Data\n\nbase_data=transform(base_data,day=weekdays(Date.Time))\nbase_data=transform(base_data,month=factor(months(Date.Time), levels=months(Date.Time)))\nbase_data=transform(base_data,hour=hour(Date.Time))\nbase_data=transform(base_data,timestamp=as.numeric(Date.Time))\nbase_data=na.omit(base_data)\n\n\n\n# Calculate relative electricity consumption\nbase_data = ddply(base_data, \"file\", transform, highest_elec=max(Electricity.Facility..kW..Hourly.)) %>% ddply(\"file\", transform, highest_gas=max(Gas.Facility..kW..Hourly.)) %>% \n \n\n\n# Calculate relative electricty + gas consumption\n# base_data = ddply(base_data, \"file\", transform, highest gas=max('Gas.Facility..kW..Hourly.'))\n\n\n# Electricity Plot\nggplot(data=filter(base_data,file=='RefBldgFullServiceRestaurantNew2004_v1.3_7.1_8A_USA_AK_FAIRBANKS.csv'), aes(factor(hour),Electricity.Facility..kW..Hourly.)) + geom_boxplot() + facet_wrap(~month)\n# Gas Plot\nggplot(data=filter(base_data,file=='USA_PA_State.College-Penn.State.University.725128_TMY3_HIGH.csv'), aes(factor(hour),Gas.Facility..kW..Hourly.)) + geom_boxplot() + facet_wrap(~month)\n# Electricity and Gas Plot Overlay\nggplot(data=subset(base_data,!is.na(month)&file=='USA_WA_Whidbey.Island.NAS.690230_TMY3_HIGH.csv')) + \n      geom_boxplot(aes(factor(hour),Electricity.Facility..kW..Hourly.)) + \n      geom_boxplot(aes(factor(hour),Gas.Facility..kW..Hourly.), color='red') + \n      facet_wrap(~month)\n\n\n\n# Features\nfeature = ddply(base_data, \"file\", summarise, \n                max_elec=max(Electricity.Facility..kW..Hourly.),\n                max_gas=max(Gas.Facility..kW..Hourly.),\n                min_elec=min(Electricity.Facility..kW..Hourly.), \n                min_gas=min(Gas.Facility..kW..Hourly.),\n                avg_elec_consump=mean(Electricity.Facility..kW..Hourly.),\n                avg_gas_consump=mean(Gas.Facility..kW..Hourly.),\n                n_peaks_elec_total=dim(findpeaks(Electricity.Facility..kW..Hourly.))[1]\n                )\n\navg_elec_per_hour_long = ddply(base_data,c(\"file\",\"hour\"),summarise,avg_elec_p_hour = mean(Electricity.Facility..kW..Hourly.))\navg_elec_per_hour = dcast(avg_elec_per_hour_long,file~hour)\ncolnames(avg_elec_per_hour) = paste(colnames(avg_elec_per_hour),\"h elec\")\n\navg_gas_per_hour_long = ddply(base_data,c(\"file\",\"hour\"),summarise,avg_gas_p_hour=mean(Gas.Facility..kW..Hourly.)) \navg_gas_per_hour = dcast(avg_gas_per_hour_long, file~hour) \ncolnames(avg_gas_per_hour) = paste(colnames(avg_gas_per_hour),\"h gas\")\n\navg_energy_per_hour = cbind(avg_gas_per_hour_long,avg_elec_per_hour_long[-c(1,2)])\n\npeak_dat = ddply(avg_energy_per_hour,\"file\",summarise,\n                  n_peaks_elec=dim(findpeaks(avg_elec_p_hour))[1],\n                  highest_pk_time_elec=findpeaks(avg_elec_p_hour)[which.max(findpeaks(avg_elec_p_hour)[,1]),2]-1,\n                  n_peaks_gas=ifelse(is.null(dim(findpeaks(avg_gas_p_hour)))[1],0,dim(findpeaks(avg_gas_p_hour))),\n                  highest_pk_time_gas= ifelse(is.null(findpeaks(avg_gas_p_hour)[which.max(findpeaks(avg_gas_p_hour)[,1]),2]),\n                                              0,\n                                              findpeaks(avg_gas_p_hour)[which.max(findpeaks(avg_gas_p_hour)[,1]),2]-1),\n                  Second_peak_location_elec = ifelse(is.na(findpeaks(avg_elec_p_hour)[sort(findpeaks(avg_elec_p_hour)[,1], index.return=TRUE, decreasing = TRUE)$ix[2],2]),0,findpeaks(avg_elec_p_hour)[sort(findpeaks(avg_elec_p_hour)[,1], index.return=TRUE, decreasing = TRUE)$ix[2],2]-1),\n                  Second_peak_height_elec = ifelse(is.na(findpeaks(avg_elec_p_hour)[sort(findpeaks(avg_elec_p_hour)[,1], index.return=TRUE, decreasing = TRUE)$ix[2],1]),0,findpeaks(avg_elec_p_hour)[sort(findpeaks(avg_elec_p_hour)[,1], index.return=TRUE, decreasing = TRUE)$ix[2],1])\n                 )\n\n\nggplot(data=filter(avg_elec_per_hour_long,file=='USA_PA_State.College-Penn.State.University.725128_TMY3_HIGH.csv')) + geom_line(aes(hour,avg_elec_p_hour))\nggplot(data=filter(avg_gas_per_hour_long,file=='USA_PA_State.College-Penn.State.University.725128_TMY3_HIGH.csv')) + geom_line(aes(hour,avg_gas_p_hour))\n \nggplot(data=avg_gas_per_hour_long)+geom_line(aes(hour,avg_gas_p_hour))+facet_wrap(~file, scales=\"free\")\nggplot(data=avg_elec_per_hour_long)+geom_line(aes(hour,avg_elec_p_hour))+facet_wrap(~file, scales=\"free_y\")\n\nfeatures_total = cbind(feature,n_peaks_elec = peak_dat$n_peaks_elec,highest_pk_time_elec = peak_dat$highest_pk_time_elec, second_peak_time=peak_dat$Second_peak_location_elec,second_peak_height=peak_dat$Second_peak_height_elec,n_peaks_gas = peak_dat$n_peaks_gas, highest_pk_time_gas = peak_dat$highest_pk_time_gas,avg_elec_per_hour[-1],avg_gas_per_hour[-1]) \n\n\n\n\n\n\n\n# K Means Clustering of Feature Data\n\n\n\n# kMeans = kmeans(base_data[c('timestamp','Gas.Facility..kW..Hourly.','Electricity.Facility..kW..Hourly.')], 6, nstart=20)\n# base_data$cluster = kMeans$cluster\n\n# Group each property by maximum count of each cluster number\n# cluster_max_count = ddply(base_data,c('file','cluster'),count,'cluster')\n\n",
    "created" : 1498469315704.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2461165443",
    "id" : "128DAC4C",
    "lastKnownWriteTime" : 1498757385,
    "last_content_update" : 1498757385647,
    "path" : "~/Documents1/PhD/Opower/Scripts/oPower/building_clustering.R",
    "project_path" : "building_clustering.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}